disallowed-methods = [
    # f32
    { path = "f32::powi", reason = "use math_ops::FloatPow::squared, math_ops::FloatPow::cubed, or math_ops::powf instead for libm determinism" },
    { path = "f32::log", reason = "use math_ops::ln, math_ops::log2, or math_ops::log10 instead for libm determinism" },
    { path = "f32::abs_sub", reason = "deprecated and deeply confusing method" },
    { path = "f32::powf", reason = "use math_ops::powf instead for libm determinism" },
    { path = "f32::exp", reason = "use math_ops::exp instead for libm determinism" },
    { path = "f32::exp2", reason = "use math_ops::exp2 instead for libm determinism" },
    { path = "f32::ln", reason = "use math_ops::ln instead for libm determinism" },
    { path = "f32::log2", reason = "use math_ops::log2 instead for libm determinism" },
    { path = "f32::log10", reason = "use math_ops::log10 instead for libm determinism" },
    { path = "f32::cbrt", reason = "use math_ops::cbrt instead for libm determinism" },
    { path = "f32::hypot", reason = "use math_ops::hypot instead for libm determinism" },
    { path = "f32::sin", reason = "use math_ops::sin instead for libm determinism" },
    { path = "f32::cos", reason = "use math_ops::cos instead for libm determinism" },
    { path = "f32::tan", reason = "use math_ops::tan instead for libm determinism" },
    { path = "f32::asin", reason = "use math_ops::asin instead for libm determinism" },
    { path = "f32::acos", reason = "use math_ops::acos instead for libm determinism" },
    { path = "f32::atan", reason = "use math_ops::atan instead for libm determinism" },
    { path = "f32::atan2", reason = "use math_ops::atan2 instead for libm determinism" },
    { path = "f32::sin_cos", reason = "use math_ops::sin_cos instead for libm determinism" },
    { path = "f32::exp_m1", reason = "use math_ops::exp_m1 instead for libm determinism" },
    { path = "f32::ln_1p", reason = "use math_ops::ln_1p instead for libm determinism" },
    { path = "f32::sinh", reason = "use math_ops::sinh instead for libm determinism" },
    { path = "f32::cosh", reason = "use math_ops::cosh instead for libm determinism" },
    { path = "f32::tanh", reason = "use math_ops::tanh instead for libm determinism" },
    { path = "f32::asinh", reason = "use math_ops::asinh instead for libm determinism" },
    { path = "f32::acosh", reason = "use math_ops::acosh instead for libm determinism" },
    { path = "f32::atanh", reason = "use math_ops::atanh instead for libm determinism" },
    # f64
    { path = "f64::powi", reason = "use math_ops::FloatPow::squared, math_ops::FloatPow::cubed, or math_ops::powf instead for libm determinism" },
    { path = "f64::log", reason = "use math_ops::ln, math_ops::log2, or math_ops::log10 instead for libm determinism" },
    { path = "f64::abs_sub", reason = "deprecated and deeply confusing method" },
    { path = "f64::powf", reason = "use math_ops::powf instead for libm determinism" },
    { path = "f64::exp", reason = "use math_ops::exp instead for libm determinism" },
    { path = "f64::exp2", reason = "use math_ops::exp2 instead for libm determinism" },
    { path = "f64::ln", reason = "use math_ops::ln instead for libm determinism" },
    { path = "f64::log2", reason = "use math_ops::log2 instead for libm determinism" },
    { path = "f64::log10", reason = "use math_ops::log10 instead for libm determinism" },
    { path = "f64::cbrt", reason = "use math_ops::cbrt instead for libm determinism" },
    { path = "f64::hypot", reason = "use math_ops::hypot instead for libm determinism" },
    { path = "f64::sin", reason = "use math_ops::sin instead for libm determinism" },
    { path = "f64::cos", reason = "use math_ops::cos instead for libm determinism" },
    { path = "f64::tan", reason = "use math_ops::tan instead for libm determinism" },
    { path = "f64::asin", reason = "use math_ops::asin instead for libm determinism" },
    { path = "f64::acos", reason = "use math_ops::acos instead for libm determinism" },
    { path = "f64::atan", reason = "use math_ops::atan instead for libm determinism" },
    { path = "f64::atan2", reason = "use math_ops::atan2 instead for libm determinism" },
    { path = "f64::sin_cos", reason = "use math_ops::sin_cos instead for libm determinism" },
    { path = "f64::exp_m1", reason = "use math_ops::exp_m1 instead for libm determinism" },
    { path = "f64::ln_1p", reason = "use math_ops::ln_1p instead for libm determinism" },
    { path = "f64::sinh", reason = "use math_ops::sinh instead for libm determinism" },
    { path = "f64::cosh", reason = "use math_ops::cosh instead for libm determinism" },
    { path = "f64::tanh", reason = "use math_ops::tanh instead for libm determinism" },
    { path = "f64::asinh", reason = "use math_ops::asinh instead for libm determinism" },
    { path = "f64::acosh", reason = "use math_ops::acosh instead for libm determinism" },
    { path = "f64::atanh", reason = "use math_ops::atanh instead for libm determinism" },
    # These methods have defined precision, but are only available from the standard library,
    # not in core. Using these substitutes allows for no_std compatibility.
    # f32
    { path = "f32::rem_euclid", reason = "use math_ops::rem_euclid instead for no_std compatibility" },
    { path = "f32::abs", reason = "use math_ops::abs instead for no_std compatibility" },
    { path = "f32::sqrt", reason = "use math_ops::sqrt instead for no_std compatibility" },
    { path = "f32::copysign", reason = "use math_ops::copysign instead for no_std compatibility" },
    { path = "f32::round", reason = "use math_ops::round instead for no_std compatibility" },
    { path = "f32::floor", reason = "use math_ops::floor instead for no_std compatibility" },
    { path = "f32::ceil", reason = "use math_ops::ceil instead for no_std compatibility" },
    { path = "f32::fract", reason = "use math_ops::fract instead for no_std compatibility" },
    # f64
    { path = "f64::rem_euclid", reason = "use math_ops::rem_euclid instead for no_std compatibility" },
    { path = "f64::abs", reason = "use math_ops::abs instead for no_std compatibility" },
    { path = "f64::sqrt", reason = "use math_ops::sqrt instead for no_std compatibility" },
    { path = "f64::copysign", reason = "use math_ops::copysign instead for no_std compatibility" },
    { path = "f64::round", reason = "use math_ops::round instead for no_std compatibility" },
    { path = "f64::floor", reason = "use math_ops::floor instead for no_std compatibility" },
    { path = "f64::ceil", reason = "use math_ops::ceil instead for no_std compatibility" },
    { path = "f64::fract", reason = "use math_ops::fract instead for no_std compatibility" },
]
