name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
    CARGO_TERM_COLOR: always
    RUSTFLAGS: --deny warnings -C debuginfo=line-tables-only
    RUSTDOCFLAGS: --deny warnings

jobs:
    check:
        name: Check
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: dtolnay/rust-toolchain@stable
            - uses: Swatinem/rust-cache@v2
              with:
                save-if: ${{ github.ref == 'refs/heads/main' }}
                cache-all-crates: true
                shared-key: lints
            - name: Run cargo check
              run: cargo check --locked --all-targets

    docs:
        name: Check Documentation
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: dtolnay/rust-toolchain@stable
            - uses: Swatinem/rust-cache@v2
              with:
                save-if: ${{ github.ref == 'refs/heads/main' }}
                cache-all-crates: true
                shared-key: lints
            - name: Run cargo doc
              run: cargo doc --locked --workspace --no-deps --document-private-items --keep-going

    test:
        name: Test Suite
        strategy:
            matrix:
                os: [windows-latest, macos-latest, ubuntu-latest]
        env:
            RUSTFLAGS: --deny warnings -C debuginfo=line-tables-only -Zthreads=0
        runs-on: ${{ matrix.os }}
        timeout-minutes: 60
        steps:
            - uses: actions/checkout@v4
            - uses: dtolnay/rust-toolchain@nightly
              with:
                components: llvm-tools-preview
            - uses: cargo-bins/cargo-binstall@main
            - name: Install nextest
              run: cargo binstall cargo-nextest --force
            - name: Install LLD
              run: cargo binstall cargo-binutils --force
            - name: Activate CI cargo config
              run: mv .cargo/config_ci.toml .cargo/config.toml
            - uses: Swatinem/rust-cache@v2
              with:
                save-if: ${{ github.ref == 'refs/heads/main' }}
                cache-all-crates: true
            - name: set LD_LIBRARY_PATH on unix
              run: LD_LIBRARY_PATH=$(rustc --print target-libdir)
              if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
            - name: set LD_LIBRARY_PATH on windows
              run: $env:PATH += ";" + (rustc --print target-libdir)
              shell: pwsh
              if: ${{ matrix.os == 'windows-latest' }}
            - name: Run cargo test
              run: cargo nextest run --locked --no-default-features --lib --bins --examples --no-fail-fast --features enhanced-determinism,parallel,collider-from-mesh,serialize,debug-plugin,avian2d/2d,avian3d/3d,avian2d/f64,avian3d/f64,default-collider,parry-f64,bevy_scene,bevy_picking,diagnostic_ui,bevy/dynamic_linking
            - name: Run doc tests
              run: cargo test --locked --doc --no-default-features --features enhanced-determinism,parallel,collider-from-mesh,serialize,debug-plugin,avian2d/2d,avian3d/3d,avian2d/f64,avian3d/f64,default-collider,parry-f64,bevy_scene,bevy_picking,diagnostic_ui,bevy/dynamic_linking

    lints:
        name: Lints
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: dtolnay/rust-toolchain@stable
            - uses: Swatinem/rust-cache@v2
              with:
                save-if: ${{ github.ref == 'refs/heads/main' }}
                cache-all-crates: true
                shared-key: lints
            - name: Run cargo fmt
              run: cargo fmt --all -- --check
            - name: Run cargo clippy
              run: cargo clippy --locked --all-targets
